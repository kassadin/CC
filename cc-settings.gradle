if (m[name]) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

repositories {
    maven { url rootProject.file("repo-local") }
    jcenter()
}

dependencies {
    compile "com.billy.android:cc:0.5.0"
//    compile project(":cc")
}



//auto register extension:
// 源码地址：https://github.com/luckybilly/AutoRegister
// 功能介绍：
//  在编译期扫描将打到apk包中的所有类
//  将 scanInterface的实现类 或 scanSuperClasses的子类
//  并在 codeInsertToClassName 类的 codeInsertToMethodName 方法中生成如下代码：
//  codeInsertToClassName.registerMethodName(scanInterface)
// 要点：
//  1. codeInsertToMethodName 若未指定，则默认为static块
//  2. codeInsertToMethodName 与 registerMethodName 需要同为static或非static
// 自动生成的代码示例：
/*
  在com.billy.app_lib_interface.CategoryManager.class文件中
  static
  {
    register(new CategoryA()); //scanInterface的实现类
    register(new CategoryB()); //scanSuperClass的子类
  }
 */
project.apply plugin: 'auto-register'
autoregister {
    registerInfo = [
        [
            'scanInterface'             : 'com.billy.cc.core.component.IComponent'
            , 'codeInsertToClassName'   : 'com.billy.cc.core.component.ComponentManager'
            , 'registerMethodName'      : 'registerComponent'
            , 'exclude'                 : [//排除的类，支持正则表达式（包分隔符需要用/表示，不能用.）
                'com.billy.cc.core.component.'.replaceAll("\\.", "/") + ".*"
            ]
        ]
    ]
}